name: deploy1.yml
on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkou
        uses: actions/checkout@v4
      - name: Install JAVA
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin
          cache: maven
      - name: SetUP Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: '3.8.2'
      - name: Build Project
        run: mvn -B -DskipTests package
      - name: Ver ARquivos
        run: |
          ls target/
      - name: Package Artifact
        run: |
          VERSION="${GITHUB_SHA::8}-$(date +%Y%m%d%H%M%S)"
          mkdir -p bundle && cp target/*.jar bundle/app.jar
          echo "$VERSION" > bundle/version.txt 
          tar czf bundle-${VERSION}.tgz -C bundle .
      - name: ADD SSH KEY
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{secrets.EC2_SSH_KEY}}
      - name: COPY TO AMAZON
        run: |
          scp -o StrictHostKeyChecking=no -P 22 bundle-*.tgz \
          ec2-user@ec2-44-245-179-63.us-west-2.compute.amazonaws.com:/tmp/
      - name: Deploy na AWS
        run: |
          set -euo pipefail
          VERSION="$(cat bundle/version.txt )"
          USER=ec2-user
          SERVICE=cervejaria
          HOST=ec2-44-245-179-63.us-west-2.compute.amazonaws.com
          
          ssh -o StrictHostKeyChecking=no -p "$PORT" "$USER@$HOST" \
            "VERSION='$VERSION' bash -lc '
              set -euo pipefail
              SERVICE=cervejaria
              APP_DIR=/opt/app
              REL_DIR=\$APP_DIR/releases/\$VERSION
              TARBALL=/tmp/bundle-\$VERSION.tgz
              PREV_TARGET=""
              if [ -L "$APP_DIR/current" ]; then
                PREV_TARGET="$(readlink -f "$APP_DIR/current")"
              elif [ -L "$APP_DIR/current/app.jar" ]; then
                PREV_TARGET="$(dirname "$(readlink -f "$APP_DIR/current/app.jar")")"
              fi
                echo "prev_target=${PREV_TARGET}" | sudo tee "$APP_DIR/.prev_target" >/dev/null
              # sanity check
              [ -f \"\$TARBALL\" ] || { echo \"ERRO: pacote nÃ£o existe: \$TARBALL\" >&2; exit 2; }
          
              sudo mkdir -p \"\$REL_DIR\"
              sudo tar xzf \"\$TARBALL\" -C \"\$REL_DIR\"
          
              sudo ln -sfn \"\$REL_DIR\" \"\$APP_DIR/current\"
              sudo ln -sfn \"\$REL_DIR/app.jar\" \"\$APP_DIR/current/app.jar\"
          
              sudo systemctl daemon-reload
              sudo systemctl restart \"\$SERVICE\"
            '"

      
